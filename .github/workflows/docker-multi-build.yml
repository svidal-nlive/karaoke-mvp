name: Build and Push Docker Images
# ...

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *' # Nightly build at 3AM UTC

env:
  DOCKERHUB_USER: nlivestudent

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - watcher
          - metadata
          - splitter
          - packager
          - organizer
          - status-api
          - maintenance
          - telegram_youtube_bot

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract git tag (if available)
        id: extract_tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="latest"
          fi
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Build and push ${{ matrix.service }} to DockerHub & GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/karaoke-${{ matrix.service }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USER }}/karaoke-${{ matrix.service }}:latest
            ghcr.io/${{ github.repository_owner }}/karaoke-${{ matrix.service }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ github.repository_owner }}/karaoke-${{ matrix.service }}:latest
          platforms: linux/amd64,linux/arm64

      - name: Health check built image
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/karaoke-${{ matrix.service }}:${{ env.IMAGE_TAG }}
          # Example health check for services exposing HTTP
          if [[ "${{ matrix.service }}" == "status-api" || "${{ matrix.service }}" == "metadata" || "${{ matrix.service }}" == "watcher" || "${{ matrix.service }}" == "organizer" ]]; then
            docker run -d --name temp_test -p 5000:5000 ghcr.io/${{ github.repository_owner }}/karaoke-${{ matrix.service }}:${{ env.IMAGE_TAG }}
            sleep 10
            curl -f http://localhost:5000/health || (docker logs temp_test && exit 1)
            docker rm -f temp_test
          fi

      # OPTIONAL: Telegram or Slack notifications (replace with your actual webhook/Telegram bot)
      - name: Notify Success (Telegram Example)
        if: ${{ success() }}
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="✅ Docker image ${{ matrix.service }} built and pushed as ${{ env.IMAGE_TAG }}"

      - name: Notify Failure (Telegram Example)
        if: ${{ failure() }}
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="❌ Build or push failed for ${{ matrix.service }}"
