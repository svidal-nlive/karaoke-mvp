services:
  fix-input-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /input && chmod -R 775 /input
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: input
        target: /input

  fix-metadata-json-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /metadata/json && chmod -R 775 /metadata/json
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: metadata_json
        target: /metadata/json

  fix-organized-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /organized && chmod -R 775 /organized
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: organized
        target: /organized

  fix-output-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /output && chmod -R 775 /output
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: output
        target: /output

  fix-queue-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /queue && chmod -R 775 /queue
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: queue
        target: /queue

  fix-splitter-tmp-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /tmp && chmod -R 1777 /tmp
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: splitter_tmp
        target: /tmp

  fix-stems-permissions:
    command:
      - sh
      - -c
      - chown -R ${APP_UID:-1000}:${APP_GID:-1000} /stems && chmod -R 775 /stems
    environment:
      APP_GID: "1000"
      APP_UID: "1000"
    image: alpine:latest
    networks:
      default: null
    restart: "no"
    volumes:
      - type: volume
        source: stems
        target: /stems

  redis:
    image: redis:7-alpine
    container_name: karaoke_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  watcher:
    build: ./watcher
    container_name: karaoke_watcher
    depends_on:
      - fix-input-permissions
      - fix-queue-permissions
      - redis
    volumes:
      - input:/input
      - queue:/queue
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3

  metadata:
    build: ./metadata
    container_name: karaoke_metadata
    depends_on:
      - fix-queue-permissions
      - fix-metadata-json-permissions
      - watcher
      - redis
    volumes:
      - queue:/queue
      - metadata_json:/metadata/json
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3

  splitter:
    build: ./splitter
    container_name: karaoke_splitter
    depends_on:
      - fix-queue-permissions
      - fix-stems-permissions
      - fix-splitter-tmp-permissions
      - metadata
      - redis
    volumes:
      - queue:/queue
      - stems:/stems
      - splitter_tmp:/tmp
      - ./shared:/app/shared:ro
      - ./models:/app/pretrained_models:ro
    environment:
      - REDIS_HOST=redis
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    healthcheck:
      test: ["CMD", "bash", "-c", "exit 0"]
      interval: 30s
      retries: 3

  packager:
    build: ./packager
    container_name: karaoke_packager
    depends_on:
      - fix-stems-permissions
      - fix-metadata-json-permissions
      - fix-output-permissions
      - splitter
      - redis
    volumes:
      - stems:/stems
      - metadata_json:/metadata/json
      - output:/output
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3

  organizer:
    build: ./organizer
    container_name: karaoke_organizer
    depends_on:
      - fix-output-permissions
      - fix-organized-permissions
      - fix-metadata-json-permissions
      - packager
      - redis
    volumes:
      - output:/output
      - organized:/organized
      - metadata_json:/metadata/json
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
      - OUTPUT_DIR=/output
      - ORG_DIR=/organized
      - LOGS_DIR=/logs
      - META_DIR=/metadata
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3

  status-api:
    build: ./status-api
    container_name: karaoke_status_api
    depends_on:
      - fix-input-permissions
      - fix-queue-permissions
      - fix-metadata-json-permissions
      - fix-stems-permissions
      - fix-output-permissions
      - fix-organized-permissions
      - organizer
      - redis
    ports:
      - "5001:5001"
    volumes:
      - input:/input
      - queue:/queue
      - metadata_json:/metadata/json
      - stems:/stems
      - output:/output
      - organized:/organized
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      retries: 3

  maintenance:
    build: ./maintenance
    container_name: karaoke_maintenance
    depends_on:
      - redis
    volumes:
      - metadata_json:/metadata/json
      - stems:/stems
      - output:/output
      - queue:/queue
      - organized:/organized
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    entrypoint: ["python", "cleanup.py"]

  maintenance-cron:
    build: ./maintenance
    container_name: karaoke_maintenance_cron
    depends_on:
      - redis
    volumes:
      - metadata_json:/metadata/json
      - stems:/stems
      - output:/output
      - queue:/queue
      - organized:/organized
      - ./shared:/app/shared:ro
    environment:
      - REDIS_HOST=redis
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - CLEANUP_CRON_SCHEDULE=${CLEANUP_CRON_SCHEDULE}
    restart: unless-stopped
    command: ["sh", "-c", "crontab /app/crontab && cron -f"]

  telegram_youtube_bot:
    build: ./telegram_youtube_bot
    container_name: telegram_youtube_bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - YTDLP_OUTPUT_DIR=/input
      - METADATA_OUTPUT_DIR=/metadata
    volumes:
      - input:/input
      - metadata_json:/metadata/json
    depends_on:
      - fix-input-permissions
      - fix-metadata-json-permissions
    restart: unless-stopped

volumes:
  input:
  queue:
  stems:
  output:
  organized:
  splitter_tmp:
  shared_utils:
    driver: local
    driver_opts:
      type: none
      device: ./shared
      o: bind

  metadata_json:
networks:
  default:
    name: karaoke-mvp_default
